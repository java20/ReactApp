{"version":3,"sources":["component2/CSS3.png","component2/html.png","component2/View.js","component2/Main.js","component2/Sidenav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","View","op","opacity","parseInt","toString","this","props","tag","opacity1","numToHexOpacity","colopacity","opacity2","bgopacity","mystyle","color","colour","background","bgcolour","border","Width","Type","borcolour","fontFamily","Font1","Font2","id","style","href","Href","target","Targt","content","Component","Main","setContent","event","setState","Content","value","setUrl","setTarget","Target","setId","Id","setClass","Class","setOpacity","Opacity1","setColour","Colour1","setBgColour","Colour2","setBgOpacity","Opacity2","setBorderWidth","setBorderStyle","setBorderColor","Colour3","setPrimary","PriFont","setSecondary","SecFont","state","elementtype","className","type","required","placeholder","onChange","for","selected","step","min","max","Sidenav","handleAnchor","Element","handleButton","handleCode","handleHeadings","handleColor","handleBgColor","handleBorder","handleFont","src","logo1","alt","width","height","class","onClick","logo2","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b676c003.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CSS3.c26a73b4.png\";","module.exports = __webpack_public_path__ + \"static/media/html.f2282f94.png\";","import React, { Component } from 'react'\r\nimport './ViewStyle.css'\r\n\r\nclass View extends Component {          // SR681773437    8640086400\r\n\r\n    \r\n\r\n     numToHexOpacity(op){\r\n        let opacity =  op*100\r\n        opacity = 255 * (opacity * 0.01)\r\n        opacity = parseInt(opacity.toString())\r\n        opacity = opacity.toString(16)\r\n      return opacity\r\n    }\r\n\r\n    render() {\r\n            if(this.props.tag==='anchor'){ \r\n                let opacity1 = this.numToHexOpacity(this.props.colopacity)\r\n                let opacity2 = this.numToHexOpacity(this.props.bgopacity)\r\n\r\n                const mystyle={\r\n                    color: this.props.colour+opacity1,\r\n                    background: this.props.bgcolour+opacity2, \r\n                    border: this.props.Width+'px '+this.props.Type+' '+this.props.borcolour,\r\n                    fontFamily: this.props.Font1+', '+this.props.Font2\r\n                }\r\n                    return (\r\n                        <div id='ViewComponent'>\r\n                            <a style={mystyle}  href={this.props.Href} target={this.props.Targt}>{this.props.content}</a>                \r\n                        </div>\r\n                    )\r\n            }\r\n    }\r\n}\r\n\r\nexport default View\r\n","import React, { Component } from 'react'\r\nimport './mainStyle.css'\r\nimport View from './View'\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n                                                              /*** ANCHOR STATE */\r\n            Content: 'Google',\r\n            Href: 'https://www.google.com',\r\n            Target: '_self',\r\n            Id: 'Link@ID',\r\n            Class: 'Link@CLASS',\r\n          \r\n                                                              /*** COLOR STATE */\r\n            Opacity1: 1.0,\r\n            Colour1: '#0066ff',\r\n                                                              /*** Back-ground STATE */\r\n          \r\n            Colour2: '#ffffff',\r\n            //  Url: '',\r\n             Opacity2: 1.0,\r\n                                                              /** Border STATE */\r\n            Width: 2,\r\n            Type: 'solid',\r\n            Colour3: '#000000',\r\n                                                              /** Font STATE */\r\n            PriFont: 'Arial',\r\n            SecFont: 'sans-serif'\r\n        }\r\n    }\r\n    \r\n    setContent = (event) => {\r\n        this.setState({\r\n            Content: event.target.value\r\n        });\r\n    }\r\n\r\n    setUrl = (event) => {\r\n        this.setState({\r\n            Href: event.target.value\r\n        });\r\n    }\r\n\r\n    setTarget = (event) => {\r\n        this.setState({\r\n            Target: event.target.value\r\n        });\r\n    }\r\n\r\n    setId = (event) => {\r\n        this.setState({\r\n            Id: event.target.value\r\n        });\r\n    }\r\n\r\n    setClass = (event) => {\r\n        this.setState({\r\n            Class: event.target.value\r\n        });\r\n    }\r\n\r\n    setOpacity = (event) => {\r\n      this.setState({\r\n          Opacity1: event.target.value\r\n      });\r\n  }\r\n\r\n  setColour = (event) => {\r\n      this.setState({\r\n          Colour1: event.target.value\r\n      });\r\n  }\r\n\r\n  setBgColour  = (event) => {\r\n    this.setState({\r\n      Colour2: event.target.value\r\n });\r\n}\r\n\r\n// setBgImgUrl  = (event) => {\r\n//     this.setState({\r\n//       Url: event.target.value\r\n//  });\r\n// }\r\n\r\nsetBgOpacity  = (event) => {\r\n    this.setState({\r\n      Opacity2: event.target.value\r\n });\r\n}\r\n\r\nsetBorderWidth = (event) => {\r\n  this.setState({\r\n    Width: event.target.value\r\n  });\r\n}\r\n\r\nsetBorderStyle = (event) => {\r\n  this.setState({\r\n    Type: event.target.value\r\n  });\r\n}\r\n\r\nsetBorderColor = (event) => {\r\n  this.setState({\r\n    Colour3: event.target.value\r\n  });\r\n}\r\n\r\nsetPrimary = (event) => {\r\n  this.setState({\r\n     PriFont: event.target.value\r\n  });\r\n}\r\n\r\nsetSecondary = (event) => {\r\n  this.setState({\r\n     SecFont: event.target.value\r\n  });\r\n}\r\n\r\n    render() {\r\n        if(this.props.elementtype==='default'){\r\n          return (\r\n            <div id='main'>\r\n                <h3>Welcome To</h3>\r\n                <h1>STYLE AUTOMATE</h1>\r\n            </div>\r\n      )\r\n        }\r\n        else if(this.props.elementtype==='a'){\r\n              return (\r\n                <>\r\n                      <div id='mainHtml'>\r\n                         <h2>Anchor element</h2>\r\n                    <div className='input-group mb-3 pl-4 pr-4 input-group-sm'>\r\n                      <div className='input-group-prepend'>\r\n                        <span className='input-group-text'>TAG CONTENT &nbsp;<sup>&#9913;</sup></span>\r\n                      </div>\r\n                      <input type='text'\r\n                        value={this.state.Content}\r\n                       required \r\n                       className='form-control' \r\n                       placeholder='Enter Content' \r\n                       onChange={this.setContent} />\r\n                      </div>\r\n                    <div className='input-group mb-3 pl-4 pr-4 input-group-sm'>\r\n                      <div className='input-group-prepend'>\r\n                        <span className='input-group-text'>Href &nbsp;<sup>&#9913;</sup></span>\r\n                      </div>\r\n                    <input\r\n                     value={this.state.Href} \r\n                    type='url' \r\n                    id='urladdress' \r\n                    required \r\n                    className='form-control' \r\n                    placeholder='Enter url' \r\n                    onChange={this.setUrl} />\r\n                    <div className='input-group-prepend'>\r\n                        <label for='selTarget' className='input-group-text'>Select Target</label>\r\n                      </div>\r\n                       <select value={this.state.Target} className='form-control' id='selTarget' onChange={this.setTarget}>\r\n                          <option selected>_self</option>\r\n                          <option>_blank</option>\r\n                          <option>_parent</option>\r\n                          <option>_top</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='input-group mb-3 pl-4 pr-4 input-group-sm'>\r\n                      <div className='input-group-prepend'>\r\n                        <span className='input-group-text'>ID</span>\r\n                      </div>\r\n                        <input\r\n                        value={this.state.Id} \r\n                        type='text' \r\n                        id='anchor@id'\r\n                        className='form-control' \r\n                        placeholder='Enter ID' \r\n                        onChange={this.setId}/>\r\n                      <div className='input-group-prepend'>\r\n                        <span className='input-group-text'>Class</span>\r\n                      </div>\r\n                      <input \r\n                       value={this.state.Class}\r\n                      type='text' \r\n                      id='anchor@class' \r\n                      className='form-control' \r\n                      placeholder='Enter Class' \r\n                      onChange={this.setClass}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                    <View \r\n                    tag={'anchor'} \r\n                    content= {this.state.Content}\r\n                    Href= {this.state.Href}\r\n                    Target= {this.state.Target}\r\n                    Id= {this.state.Id}\r\n                    Class= {this.state.Class}\r\n                    colour={this.state.Colour1} \r\n                    colopacity= {this.state.Opacity1}\r\n                    bgcolour={this.state.Colour2}\r\n                    bgopacity={this.state.Opacity2}\r\n                    Width={this.state.Width}\r\n                    Type={this.state.Type}\r\n                    borcolour={this.state.Colour3}\r\n                    Font1={this.state.PriFont}\r\n                    Font2={this.state.SecFont}\r\n                    />\r\n                </>\r\n          )\r\n        }\r\n        else if(this.props.elementtype==='button'){\r\n        return (\r\n          <div id='mainHtml'>\r\n              <h2>Button element</h2>\r\n              <p>This is button part area</p>\r\n          </div>\r\n        )\r\n        }\r\n        else if(this.props.elementtype==='code'){\r\n          return (\r\n              <div id='mainHtml'>\r\n                  <h2>Code element</h2>\r\n                  <p>This is code part area</p>\r\n              </div>\r\n            )\r\n        }\r\n        else if(this.props.elementtype==='headings'){\r\n        return (\r\n          <div id='mainHtml'>\r\n              <h2>Heading element</h2>\r\n              <p>This is Heading part area</p>\r\n          </div>\r\n         )\r\n        }\r\n        else if(this.props.elementtype==='color'){\r\n          return(\r\n            <>\r\n                <div id='mainStyle'>\r\n                  <h2>Color</h2>\r\n                    <div className='input-group mb-3 pl-4 pr-4 input-group-sm'>\r\n                        <div className='input-group-prepend'>\r\n                            <span className='input-group-text'>COLOR</span>\r\n                        </div>\r\n                        <input \r\n                        value={this.state.Colour1} \r\n                        type='color' \r\n                        className='form-control' \r\n                        onChange={this.setColour} />\r\n                    </div>\r\n                    <div className='input-group mb-3 pl-4 pr-4 input-group-sm'>\r\n                        <div className='input-group-prepend'>\r\n                            <span className='input-group-text'>OPACITY</span>\r\n                        </div>\r\n                            <input \r\n                            type='range' \r\n                             value={this.state.Opacity1} \r\n                            className=\"custom-range form-control\" \r\n                            step='0.1' \r\n                            min='0' \r\n                            max='1' \r\n                            onChange={this.setOpacity}\r\n                            />\r\n                        <div className='input-group-append'>\r\n                            <span className='input-group-text'>{this.state.Opacity1}</span>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <View \r\n                    tag={'anchor'} \r\n                    content= {this.state.Content}\r\n                    Href= {this.state.Href}\r\n                    Target= {this.state.Target}\r\n                    Id= {this.state.Id}\r\n                    Class= {this.state.Class}\r\n                    colour={this.state.Colour1} \r\n                    colopacity= {this.state.Opacity1}\r\n                    />\r\n                  </>\r\n          )\r\n        }\r\n        else if(this.props.elementtype==='background-color'){\r\n          return(\r\n          <>\r\n          <div id='mainStyle'>\r\n          <h2>Background-Color</h2>\r\n          <div className='input-group mb-3 pl-4 pr-4 input-group-sm'>\r\n              <div className='input-group-prepend'>\r\n                  <span className='input-group-text'>BACKGROUND-COLOR</span>\r\n              </div>\r\n                  <input\r\n                   value={this.state.Colour2}\r\n                   onChange={this.setBgColour}\r\n                   type='color'\r\n                   className='form-control' \r\n                      />\r\n          </div>\r\n          {/* <div className='input-group mb-3 pl-4 pr-4 input-group-sm'>\r\n              <div className='input-group-prepend'>\r\n                  <span className='input-group-text'>BACKGROUND-IMAGE</span>\r\n              </div>\r\n                  <input \r\n                  value={this.state.Url} \r\n                  onChange={this.setBgImgUrl} \r\n                  type='url' \r\n                  className='form-control' \r\n                  placeholder='Enter url' \r\n                  />\r\n              </div> */}\r\n          <div className='input-group mb-3 pl-4 pr-4 input-group-sm'>\r\n              <div className='input-group-prepend'>\r\n                  <span className='input-group-text'>OPACITY</span>\r\n              </div>\r\n                  <input \r\n                  value={this.state.Opacity2}\r\n                  onChange={this.setBgOpacity}\r\n                  type='range' \r\n                  className=\"custom-range form-control\" \r\n                  step='0.1' \r\n                  min='0.0' \r\n                  max='1.0' \r\n                  />\r\n              <div className='input-group-append'>\r\n                  <span className='input-group-text'>{this.state.Opacity2}</span>\r\n              </div>\r\n            </div>\r\n           </div>\r\n           <View \r\n                    tag={'anchor'} \r\n                    content= {this.state.Content}\r\n                    Href= {this.state.Href}\r\n                    Target= {this.state.Target}\r\n                    Id= {this.state.Id}\r\n                    Class= {this.state.Class}\r\n                    bgcolour={this.state.Colour2}\r\n                    bgopacity={this.state.Opacity2}\r\n                    />\r\n          </>\r\n          )\r\n        }\r\n        else if(this.props.elementtype==='border'){\r\n          return(\r\n          <>\r\n          <div id='mainStyle'>\r\n            <h2>Border</h2>\r\n                    <div className='input-group mb-3 pl-4 pr-4 input-group-sm'>\r\n                        <div className='input-group-prepend'>\r\n                            <label for='border@width' className='input-group-text'>BORDER-WIDTH(px)</label>\r\n                        </div>\r\n                            <input\r\n                             type='number' \r\n                             placeholder='Enter Width' \r\n                             id='border@width' \r\n                             className='form-control' \r\n                             value={this.state.Width}\r\n                             onChange={this.setBorderWidth}\r\n                             />\r\n                    </div>\r\n                    <div className='input-group mb-3 pl-4 pr-4 input-group-sm'>\r\n                        <div className='input-group-prepend'>\r\n                            <label for='border@wstyle' className='input-group-text'>BORDER-TYPE</label>\r\n                        </div>\r\n                        <select value={this.state.Type} onChange={this.setBorderStyle} className='form-control' id='border@style'>\r\n                          <option>dotted</option>\r\n                          <option>dashed</option>\r\n                          <option selected>solid</option>\r\n                          <option>double</option>\r\n                          <option>groove</option>\r\n                          <option>ridge</option>\r\n                          <option>inset</option>\r\n                          <option>outset</option>\r\n                          <option>none</option>\r\n                          <option>hidden</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='input-group mb-3 pl-4 pr-4 input-group-sm'>\r\n                        <div className='input-group-prepend'>\r\n                            <label for='border@color' className='input-group-text'>BORDER-COLOR</label>\r\n                        </div>\r\n                        <input \r\n                        type='color' \r\n                        id='border@wcolor' \r\n                        className='form-control' \r\n                        value={this.state.Colour3}\r\n                        onChange={this.setBorderColor}\r\n                        />\r\n                     </div>\r\n                    </div>\r\n                    <View \r\n                    tag={'anchor'} \r\n                    content= {this.state.Content}\r\n                    Href= {this.state.Href}\r\n                    Target= {this.state.Target}\r\n                    Id= {this.state.Id}\r\n                    Class= {this.state.Class}\r\n                    Width={this.state.Width}\r\n                    Type={this.state.Type}\r\n                    borcolour={this.state.Colour3}\r\n                    />\r\n          </>\r\n         )\r\n        }\r\n        else if(this.props.elementtype==='font'){\r\n          return(\r\n            <>\r\n            <div id='mainStyle'>\r\n              <h2>Font</h2>\r\n                    <div className='input-group mb-3 pl-4 pr-4 input-group-sm'>\r\n                        <div className='input-group-prepend'>\r\n                            <span className='input-group-text'>Font-Family</span>\r\n                        </div>\r\n                        <select value={this.state.PriFont} onChange={this.setPrimary} className='form-control' placeholder='Primary font'>\r\n                          <option selected>Arial</option>\r\n                          <option>Arial-Narrow</option>\r\n                          <option>Helvetica</option>\r\n                          <option>Verdana</option>\r\n                          <option>Gill Sans</option>\r\n                          <option>Noto Sans</option>\r\n                          <option>Georgia</option>\r\n                          <option>Times New Roman</option>\r\n                          <option>monospace</option>\r\n                        </select>\r\n                        <select value={this.state.SecFont} onChange={this.setSecondary} className='form-control' placeholder='Secondary font'>\r\n                          <option>serif</option>\r\n                          <option selected>sans-serif</option>\r\n                          <option>monospace</option>\r\n                          <option>cursive</option>\r\n                          <option>fantasy</option>\r\n                        </select>\r\n                    </div>\r\n                    </div>\r\n                    <View \r\n                    tag={'anchor'} \r\n                    content= {this.state.Content}\r\n                    Href= {this.state.Href}\r\n                    Target= {this.state.Target}\r\n                    Id= {this.state.Id}\r\n                    Class= {this.state.Class}\r\n                    Font1={this.state.PriFont}\r\n                    Font2={this.state.SecFont}\r\n                    />\r\n            </>\r\n          )\r\n        }\r\n      }\r\n}\r\n\r\nexport default Main\r\n","import React, { Component } from 'react'\r\nimport logo1 from './CSS3.png'\r\nimport './sideNavStyle.css'\r\nimport logo2 from './html.png'\r\nimport './sideNavStyle2.css'\r\nimport Main from './Main'\r\n\r\nclass Sidenav extends Component {  //844192265\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            Element: 'default'\r\n        }\r\n    }\r\n    \r\n    handleAnchor = () => {\r\n        this.setState({\r\n            Element: 'a'\r\n        })\r\n    }\r\n\r\n    handleButton = () => {\r\n        this.setState({\r\n            Element: 'button'\r\n        })\r\n    }\r\n\r\n    handleCode = () => {\r\n        this.setState({\r\n            Element: 'code'\r\n        })\r\n    }\r\n\r\n    handleHeadings = () => {\r\n        this.setState({\r\n            Element: 'headings'\r\n        })\r\n    }\r\n\r\n    handleColor = () => {\r\n        this.setState({\r\n            Element: 'color'\r\n        })\r\n    }\r\n\r\n    handleBgColor = () => {\r\n        this.setState({\r\n            Element: 'background-color'\r\n        })\r\n    }\r\n\r\n    handleBorder = () => {\r\n        this.setState({\r\n            Element: 'border'\r\n        })\r\n    }\r\n\r\n    handleFont = () => {\r\n        this.setState({\r\n            Element: 'font'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <div className=\"sidenav\">\r\n                 <div>\r\n                    <img src={logo1} alt=\"CSS LOGO\" width=\"80\" height=\"100\" id='imgCss' />\r\n                 </div>\r\n                    <div class=\"btn-group-vertical\">\r\n                    <button className=\"btn btn1\" id=\"CSS@color#1\" onClick={this.handleColor}>color</button>\r\n                    <button className=\"btn btn1\" id=\"CSS@bgcolor#2\" onClick={this.handleBgColor}>background-color</button>\r\n                    <button className=\"btn btn1\" id=\"CSS@border#3\" onClick={this.handleBorder}>border</button>\r\n                    <button className=\"btn btn1\" id=\"CSS@font#3\" onClick={this.handleFont}>font</button>\r\n                    \r\n                    </div>\r\n                </div>\r\n\r\n                 <div id=\"main1\">\r\n                    <Main elementtype={this.state.Element}/>\r\n                </div>  \r\n\r\n                <div className=\"sidenav sidenav2\">\r\n                 <div>\r\n                    <img src={logo2} alt=\"CSS LOGO\" width=\"100\" height=\"100\" id='imgHtml'/>\r\n                 </div>\r\n                    <div className=\"btn-group-vertical\" id='htmlvertical'>\r\n                    <button className=\"btn btn2\" id=\"HTML@a#1\" onClick={this.handleAnchor}>a</button>\r\n                    <button className=\"btn btn2\" id=\"HTML@button#2\" onClick={this.handleButton}>button</button>\r\n                    <button className=\"btn btn2\" id=\"HTML@code#3\" onClick={this.handleCode}>code</button>\r\n                    <button className=\"btn btn2\" id=\"HTML@headings#4\" onClick={this.handleHeadings}>headings</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidenav\r\n","import React from 'react';\nimport './App.css';\n// import Sidenav from './components/Sidenav';\nimport Sidenav from './component2/Sidenav';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Sidenav />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}